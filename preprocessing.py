# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wqX_XWSqDZIe3M_8Xhyco3SICAKcVTmN
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('Dataset.csv')
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

#PRINT DATA ASLI
print(x)
print("=========================================================")
print(y)

from sklearn.impute import SimpleImputer
cat_col = [1,2,3,4,5]
num_col = [5]
cat_imputer = SimpleImputer(missing_values = np.nan, strategy='most_frequent')
num_imputer = SimpleImputer(missing_values = np.nan, strategy='mean')

#x[:,cat_col[:-1]] = cat_imputer.fit_transform(x[:,cat_col[:-1]])
x[:,num_col[:]] = num_imputer.fit_transform(x[:,num_col[:]])

print(x)

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0,1,2,3,4])], remainder = 'passthrough')
#x = np.array(ct.fit_transform(x))
x = ct.fit_transform(x)
x = x.toarray()

print(x)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y = le.fit_transform(y)

print(y)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 1)

print(x_train)

print(x_test)

print(y_train)

print(y_test)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train[:, 3:] = sc.fit_transform(x_train[:, 3:])
x_test[:, 3:] = sc.transform(x_test[:, 3:])

print(x_train)

print(x_test)